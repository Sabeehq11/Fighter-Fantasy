rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        (request.auth.token.role == 'admin' || 
         request.auth.uid == 'ADMIN_UID_HERE'); // Replace with actual admin UID
    }
    
    // Users can read and write their own profile
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false; // Prevent users from deleting their profiles
    }
    
    // Public read access for events, fighters, rankings, fights
    match /events/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /fighters/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /fights/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /rankings/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Config collection - public read, admin write
    match /config/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Fantasy Leagues - public read, authenticated create, admin update
    match /leagues/{leagueId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAdmin() || 
        (isAuthenticated() && resource.data.created_by == request.auth.uid);
      allow delete: if isAdmin();
    }
    
    // Fantasy Salaries - public read, admin write
    match /salaries/{salaryId} {
      allow read: if true;
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Fantasy Teams - users can manage their own teams
    match /teams/{teamId} {
      allow read: if true; // Public leaderboards
      allow create: if isAuthenticated() && 
        request.resource.data.user_id == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.user_id == request.auth.uid &&
        request.resource.data.user_id == request.auth.uid &&
        (resource.data.status == 'draft' || 
         resource.data.status == 'submitted'); // Can't edit locked/scored teams
      allow delete: if isAuthenticated() && 
        resource.data.user_id == request.auth.uid &&
        resource.data.status == 'draft'; // Can only delete draft teams
    }
    
    // Legacy fantasy collections (backward compatibility)
    match /fantasy_teams/{teamId} {
      allow read: if true;
      allow create: if isAuthenticated() && 
        request.resource.data.user_id == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.user_id == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.user_id == request.auth.uid;
    }
    
    match /fantasy/teams/{teamId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    match /fantasy/leagues/{leagueId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /fantasy/salaries/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 