rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() { return request.auth != null; }
    function isOwner(userId) { return isAuthenticated() && request.auth.uid == userId; }
    function isAdmin() {
      return isAuthenticated() && (request.auth.token.role == 'admin' || request.auth.uid == 'ADMIN_UID_HERE');
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false;
    }

    match /events/{document=**} { allow read: if true; allow write: if isAdmin(); }
    match /fighters/{document=**} { allow read: if true; allow write: if isAdmin(); }
    match /fights/{document=**} { allow read: if true; allow write: if isAdmin(); }
    match /rankings/{document=**} { allow read: if true; allow write: if isAdmin(); }
    match /config/{document=**} { allow read: if true; allow write: if isAdmin(); }

    // Legacy fantasy collections
    match /leagues/{leagueId} { 
      allow read: if true; 
      allow create: if isAuthenticated(); 
      allow update: if isAdmin() || (isAuthenticated() && request.resource.data.keys().hasOnly(['total_entries']));
      allow delete: if isAdmin(); 
    }
    match /salaries/{salaryId} { allow read: if true; allow write: if isAdmin(); }
    match /teams/{teamId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.resource.data.user_id == request.auth.uid;
      // Allow update if user owns the team and either:
      // 1. The team is currently in draft status (can edit draft)
      // 2. The team is being changed from draft to submitted (submitting)
      // 3. The team is already submitted (can update submitted teams before lock)
      allow update: if isAuthenticated() && 
                      resource.data.user_id == request.auth.uid && 
                      (resource.data.status == 'draft' || 
                       (resource.data.status == 'draft' && request.resource.data.status == 'submitted') ||
                       resource.data.status == 'submitted');
      allow delete: if isAuthenticated() && resource.data.user_id == request.auth.uid && resource.data.status == 'draft';
    }
    match /fantasy_teams/{teamId} { allow read: if true; allow write: if isAuthenticated(); }
    match /fantasy/teams/{teamId} { allow read: if isAuthenticated(); allow write: if isAuthenticated(); }
    match /fantasy/leagues/{leagueId} { allow read: if isAuthenticated(); allow write: if isAdmin(); }
    match /fantasy/salaries/{document=**} { allow read: if true; allow write: if isAdmin(); }

    // Prediction mode top-level collections
    match /fantasy_leagues/{leagueId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    match /fantasy_entries/{entryId} {
      allow read: if true;  // Allow public read for leaderboard viewing
      allow create: if isAuthenticated() && request.resource.data.user_id == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.user_id == request.auth.uid && (resource.data.is_locked == false || !('is_locked' in resource.data));
      allow delete: if false;
    }

    match /fantasy_config/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /fantasy_scores/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /{document=**} { allow read, write: if false; }
  }
} 